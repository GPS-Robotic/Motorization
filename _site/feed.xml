<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.1">
  <meta name="google-site-verification" content="aexITLS38FdIRzwj25OVWxm87rpa9l-UV0URTyC9cTs" />
  <title>
    
  </title>
  <link rel="stylesheet" href="/css/site.css">
  <link type="text/css" rel="stylesheet" href="http://fonts.googleapis.com/css?family=Ubuntu+Mono|Asap:400,700,400italic">
  <link href="/RC_icon.png" rel="shortcut icon" type="image/x-icon" />
  
  <link rel="alternate" type="application/atom+xml" title="RSS Feed for Sébastien Saunier's blog" href="/feed.xml" />

  

  

  
</head>
<body>
  <!-- <div class="top-bar">
  </div> -->

  <div class="header-container">
    <header class="inner">
      <nav>
        <a class="" href="/">Home</a>
        <a class="" href="/project/">Project</a>
        <a class="" href="/team/">Team</a>
        <a class=" contact" href="/contact/">Contact</a>
        <a class=" contact" href="/links/">Links</a>
        <a class="" href="/documentation/">Documentation</a>
        <a href="https://github.com/GPS-Robotic/Motorization">Github</a>
      </nav>
      <div class="pull-right right logo">
        <div class="name">
          <a href="/">GPS on wheels</a><br />
          <small>
            <em>
              Project homepage
            </em>
          </small>
        </div>
        <img class="avatar" src="/images/car.jpg" alt="Our profile picture" />
      </div>
      <div class="clear"></div>
    </header>
    <div class="clear"></div>
  </div>

  <?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sébastien Saunier - Blog</title>
    <description>On Software Engineering, Lean Startup, Agile and Productivity</description>
    <link>http://sebastien.saunier.me</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Final remarks</title>
      <description>&lt;p&gt;7cm&lt;/p&gt;

&lt;p&gt;Uhrzeit&lt;/p&gt;

&lt;p&gt;Wlan&lt;/p&gt;

&lt;p&gt;login&lt;/p&gt;
</description>
      <pubDate>Sun, 26 Apr 2015 00:00:00 +0200</pubDate>
      <link>/documentation/2015/04/26/final_remarks.html</link>
      <guid isPermaLink="true">/documentation/2015/04/26/final_remarks.html</guid>
    </item>
    
    <item>
      <title>Navigation theory</title>
      <description>&lt;p&gt;As mentioned in a previous post, we simplified the navigation algorithm proposed in this &lt;a href=&quot;http://www.academia.edu/757737/Reactive_Navigation_Algorithm_for_Wheeled_Mobile_Robots_under_Non-Holonomic_Constraints&quot;&gt;paper&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;On large distances, our car drives to a hard-coded GPS point using its GPS module with compass and simple geometrical considerations. But on its way it may encounter obstacles.&lt;/p&gt;

&lt;p&gt;Besides two ultrasonic sensors which only prevent the car from hitting anything coming up in front, we mounted a third one on top of a servo motor. This one checks also the surroundings of the car for free passage. To be more specific: it measures in eleven segments and whenever the measurement result is an obstacle closer than two meters, this segment is classified as occupied.&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt; &lt;img src =&quot;/images/documentation/navigation3.png&quot; alt=&quot;Navigation algorithm.&quot; width=&quot;50%&quot;&gt; &lt;/div&gt;

&lt;p&gt;So if there is any obstacle, how does the car decide which way to go? First it groups the free segments together in wide, middle and small gaps. This is important, because it is easier to pass through a large opening than through a small one. In our case, a middle sized gap is exactly three free segements. Wide gaps are any gaps larger and small gaps are any gaps narrower than that.&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt; &lt;img src =&quot;/images/documentation/navigation1.png&quot; alt=&quot;Navigation algorithm.&quot; width=&quot;50%&quot;&gt; &lt;/div&gt;

&lt;p&gt;Finally the decision is done through a cost function, which takes two considerations into account for each segment. The further the direction of the segment points away from the goal, the more it leads us away from our objective. We want to find the shortest route. The second cost depends on the gap size. As pointed out above, it is better to drive through large gaps.&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt; &lt;img src =&quot;/images/documentation/navigation2.png&quot; alt=&quot;Navigation algorithm.&quot; width=&quot;50%&quot;&gt; &lt;/div&gt;

&lt;p&gt;The segment which minimizes the cost function is then choosen as new steering direction and the steering is executed.&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt; &lt;img src =&quot;/images/documentation/navigation4.png&quot; alt=&quot;Navigation algorithm.&quot; width=&quot;50%&quot;&gt; &lt;/div&gt;
</description>
      <pubDate>Sat, 25 Apr 2015 00:00:00 +0200</pubDate>
      <link>/documentation/2015/04/25/obstacles_III.html</link>
      <guid isPermaLink="true">/documentation/2015/04/25/obstacles_III.html</guid>
    </item>
    
    <item>
      <title>The main program cycle</title>
      <description>&lt;p&gt;This is a brief description of our main program which we named &amp;quot;GPS_navigation.py&amp;quot; (#sudo #python).&lt;/p&gt;

&lt;p&gt;At first the background threads for the ultrasonic sensors and the GPS module are started, the cruise control is initialized and a log-file is created. After this the main loop starts. It is repeatedly executed until the distance to the target (based on GPS data) is smaller than an estimated GPS accuracy.&lt;/p&gt;

&lt;p&gt;The loop start by interrogating the two fixed front sensors. When they see an obstacle, the car breaks in order not to bump into anything. Because the sensors return quite many wrong measurements, we repeat the measurement and back-off only when we really find an obstacle.&lt;/p&gt;

&lt;p&gt;When the path is clear, the &lt;a href=&quot;/documentation/2015/04/25/obstacles_III.html&quot;&gt;navigation function&lt;/a&gt; takes over and returns a steering direction and a motor command (backward/ forward). After some exception handling (in cases, where no free path is found) the driving function executes the commands computed before. We choose to drive only 0.5 meter in each loop, because some crash experiences made us quiet carefull.&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt; &lt;img src =&quot;/images/documentation/Flowchart.png&quot; alt=&quot;One loop cycle.&quot; width=&quot;80%&quot;&gt; &lt;/div&gt;
</description>
      <pubDate>Sat, 25 Apr 2015 00:00:00 +0200</pubDate>
      <link>/documentation/2015/04/25/main_program.html</link>
      <guid isPermaLink="true">/documentation/2015/04/25/main_program.html</guid>
    </item>
    
    <item>
      <title>MARVON on the way to its goal!</title>
      <description>&lt;p&gt;We fixed the damages caused by our crash, improved our design and took a closer look at our navigation algorithm. Furthermore we got the compass running! Now we are able to navigate via GPS and compass which makes the robots life much easier. Since this lttle breakthrough the navigation algorithm got better step by step such that we are now able to navigate through the university buildings in an area full of obstacles on small scales. Only drawback is the accuracy of our GPS module.  &lt;/p&gt;

&lt;h2 id=&quot;but-now-in-more-detail.&quot;&gt;But now in more detail.&lt;/h2&gt;

&lt;p&gt;After the crash we revisited the whle robot and now it looks like this.&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt; &lt;img src =&quot;/images/galery/new_design_III.JPG&quot; alt=&quot;Current appearance of our car.&quot; width=&quot;60%&quot;&gt; &lt;/div&gt;

&lt;div style=&quot;text-align:center&quot;&gt; &lt;img src =&quot;/images/galery/new_design_IV.JPG&quot; alt=&quot;Current appearance of our car.&quot; width=&quot;60%&quot;&gt; &lt;/div&gt;

&lt;p&gt;the sensors are now shielded by metal and the GPS/compass module sits above all electrics to get better signal. Furthermore our cool looking shell is more or less finished and looks good.&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt; &lt;img src =&quot;/images/galery/new_design_II.JPG&quot; alt=&quot;Current appearance of our car.&quot; width=&quot;60%&quot;&gt; &lt;/div&gt;

&lt;div style=&quot;text-align:center&quot;&gt; &lt;img src =&quot;/images/galery/new_design_I.jpg&quot; alt=&quot;Current appearance of our car.&quot; width=&quot;60%&quot;&gt; &lt;/div&gt;

&lt;p&gt;In the last week we sat down and did one test after another to improve the navigation and to find bugs in our code or to test different ideas how to handle situations. The out come is as follows, we arte able to navigate through the corridors of our university building where every meter is an obstacle and GPS data is bad. Furthermore every ten seconds there will be a moving obstacle in form of a student :-) We didn&amp;#39;t include moving obstacles but it kind of worked. Next time we will take a video camera and make a movie to provide you with more insights.&lt;/p&gt;

&lt;h1 id=&quot;marvon-rotates&quot;&gt;MARVON rotates&lt;/h1&gt;

&lt;p&gt;As you will have recognized, thanks to our colleges from the image rotator group we have now a full 360 degree view of our robot. Isn&amp;#39;t it cool.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;script src=&quot;https://code.jquery.com/jquery-2.1.3.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;/js/rotate.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;/style&gt;
&lt;/head&gt;
&lt;table border=0&gt;&lt;tr&gt;&lt;td align=center&gt;
&lt;body&gt;
    &lt;div id=&quot;image&quot; src=&quot;/images/captures/&quot; width=&quot;640&quot; height=&quot;480&quot; &gt;&lt;/div&gt;&lt;/p&gt;

&lt;script&gt;
    $(document).ready(function() {
        $(&quot;#image&quot;).rotate();
    });
&lt;/script&gt;

&lt;p&gt;&lt;/body&gt;
&lt;p&gt; Thanks to the image rotator group for this stunning 360° shot of our car! &lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
&lt;div  style=&quot;border-bottom: 1px solid #ddd&quot;&gt;&lt;/div&gt;&lt;/p&gt;
</description>
      <pubDate>Tue, 31 Mar 2015 00:00:00 +0200</pubDate>
      <link>/documentation/2015/03/31/obstacles_II.html</link>
      <guid isPermaLink="true">/documentation/2015/03/31/obstacles_II.html</guid>
    </item>
    
    <item>
      <title>MARVON finds its way!</title>
      <description>&lt;p&gt;This time we tested the navigation algorithm, or at least one part of it, namely the obstacle recognition. For this we had a look at this &lt;a href=&quot;http://www.academia.edu/757737/Reactive_Navigation_Algorithm_for_Wheeled_Mobile_Robots_under_Non-Holonomic_Constraints&quot;&gt;paper&lt;/a&gt; and took some ideas how to process the sensor data from it.&lt;/p&gt;

&lt;p&gt;After installing all the sensors needed we implemented the software to read out the sensor data, calculate free driving directions and recognize obstacles. But unfortunately we couldn&amp;#39;t test our code as fats as would have liked because first we destroyed our raspberry board and had to get a new one. Finally we went outside to test our obstacle recognition and we were pretty happy that our robot seemed to drive backwards when an obstacle was recognized. This was not what we implemented, but ok. But then the problems became big ones. While testing the robot it suddenly started moving fast and hit an overhanging wall and got stuck. The sensors broke and some of our self invented mountings.&lt;/p&gt;

&lt;p&gt;So we now spent a lot of time repairing the robot, debugging the code and reinventing better mountings to protect the sensors during a crash. Now the lab tests are doing much better and we hopefully can test obstacle recognition again tomorrow and maybe implement navigation with GPS to test it. &lt;/p&gt;

&lt;p&gt;Due to this many problems encountered in the last week we can&amp;#39;t provide new pictures. But they will follow in the next days.&lt;/p&gt;
</description>
      <pubDate>Mon, 23 Mar 2015 00:00:00 +0100</pubDate>
      <link>/documentation/2015/03/23/obstacles.html</link>
      <guid isPermaLink="true">/documentation/2015/03/23/obstacles.html</guid>
    </item>
    
    <item>
      <title>Giving the Reely an reality check!</title>
      <description>&lt;p&gt;It&amp;#39;s time to open the eyes! We provide our car, meanwhile named MARVON, with a set of three ultrasonic sensors. Now the robot is aware of obstacles and prepared to find its way through unknown environments. We decided to put two static sensors in front of the car searching for obstacles directly in front of the robot. One sensor was mounted on a servo scanning the environment around the car to build a map.&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt; &lt;img src =&quot;/images/documentation/eyes.jpg&quot; alt=&quot;Current appearance of our eyed car.&quot; width=&quot;60%&quot;&gt; &lt;/div&gt;

&lt;div style=&quot;text-align:center&quot;&gt; &lt;img src =&quot;/images/documentation/eyes2.jpg&quot; alt=&quot;Current appearance of our eyed car.&quot; width=&quot;60%&quot;&gt; &lt;/div&gt;

&lt;p&gt;After many sensorical tests and writing of code to extract the distance to obstacles a first tests of a quickly written programm to test the design worked nicely. Also a piece of code for reading in GPS data is in place and a quick check of functionality brought good results. E.g. we are able to overplot Google Maps with our track. See this picture!&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt; &lt;img src =&quot;/images/documentation/map.png&quot; alt=&quot;Out on the road.&quot; width=&quot;60%&quot;&gt; &lt;/div&gt;

&lt;p&gt;Furthermore we decided to build or own shell for the robot to protect it from wetness. Therefore we went to a local construction market and bought Plexi glas and plaster. We took a plaster copy of the normal shell, put it into our oven togehter with the Plexi glas and formed it to a new transparent shell. This has two advantages. First we have more space for the electronics and second the transparency gives the opportunity to see what &amp;quot;happens inside&amp;quot;.&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt; &lt;img src =&quot;/images/documentation/shell.jpg&quot; alt=&quot;Second time on the road.&quot; width=&quot;60%&quot;&gt; &lt;/div&gt;

&lt;h1 id=&quot;status-report&quot;&gt;Status report&lt;/h1&gt;

&lt;h2 id=&quot;hardware-in-place&quot;&gt;Hardware in place&lt;/h2&gt;

&lt;h2 id=&quot;helping-code-snippets-written&quot;&gt;helping code snippets written&lt;/h2&gt;

&lt;h2 id=&quot;design-concept-in-place&quot;&gt;design concept in place&lt;/h2&gt;

&lt;p&gt;soo...&lt;/p&gt;

&lt;h1 id=&quot;let&amp;#39;s-assemble-and-have-fun-:-)&quot;&gt;Let&amp;#39;s assemble and have fun :-)&lt;/h1&gt;
</description>
      <pubDate>Mon, 02 Mar 2015 00:00:00 +0100</pubDate>
      <link>/documentation/2015/03/02/getting-eyes.html</link>
      <guid isPermaLink="true">/documentation/2015/03/02/getting-eyes.html</guid>
    </item>
    
    <item>
      <title>Reely finds it's wheels!</title>
      <description>&lt;p&gt;After learning how to steer and how to accelerate or break it is time to see wether our car is actually able to drive. This means putting together all components (GPS, steering servo, battery, motor and raspberry), fix them onto our cool looking transparency board. &lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt; &lt;img src =&quot;/images/documentation/appearance.JPG&quot; alt=&quot;Current appearance of our car.&quot; width=&quot;50%&quot;&gt; &lt;/div&gt;

&lt;p&gt;Unfortunately until now we do not have any sensors on board and we have to control our car via wireless-LAN. Nevertheless, let&amp;#39;s go and &lt;/p&gt;

&lt;h1 id=&quot;drive-like-crazy!&quot;&gt;drive like crazy!&lt;/h1&gt;

&lt;div style=&quot;text-align:center&quot;&gt; &lt;img src =&quot;/images/documentation/road.JPG&quot; alt=&quot;Out on the road.&quot; width=&quot;50%&quot;&gt; &lt;/div&gt;

&lt;p&gt;But as for everyone the first steps are the hardest. After 1m of fun our car stopped and fun was over. Wireless-LAN connection lost and raspberry was rebooting. Checking everything led to diagnosis voltage fluctuations. Our approach using only one battery for motor and raspberry seemed not to work. So working around this issue led to two batteries, one for the motor and one for the raspberry. So we put together everything and start all over again.&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt; &lt;img src =&quot;/images/documentation/road2.JPG&quot; alt=&quot;Second time on the road.&quot; width=&quot;60%&quot;&gt; &lt;/div&gt;

&lt;h2 id=&quot;test-bench&quot;&gt;Test bench&lt;/h2&gt;

&lt;p&gt;For testing minor edits on the appearance or major edits on the software we always go back to our test bench. In our case a monitor, keyboard, mouse and just a small box on a table to get the wheels up from the ground.&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt; &lt;img src =&quot;/images/documentation/test-bench.JPG&quot; alt=&quot;Test bench.&quot; width=&quot;60%&quot;&gt; &lt;/div&gt;

&lt;div style=&quot;text-align:center&quot;&gt; &lt;img src =&quot;/images/documentation/test-bench_2.jpg&quot; alt=&quot;Test bench.&quot; width=&quot;60%&quot;&gt; &lt;/div&gt;

&lt;p&gt;As you might have noticed, our GPS module has arrived and we are able to read in the data. So, our&lt;/p&gt;

&lt;h2 id=&quot;next-step&quot;&gt;Next step&lt;/h2&gt;

&lt;p&gt;will be to implement the naviagtion algorithm and test the accuracy of the GPS module.&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt; &lt;img src =&quot;/images/documentation/GPS.jpg&quot; alt=&quot;The GPS modul.&quot; width=&quot;60%&quot;&gt; &lt;/div&gt;

&lt;p&gt;Furthermore we like to add the ultrasonic sensors (untill now only 3) and test some algorithms to avoid obstacles. &lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt; &lt;img src =&quot;/images/documentation/sensors.jpg&quot; alt=&quot;The supersonic sensors.&quot; width=&quot;60%&quot;&gt; &lt;/div&gt;

&lt;p&gt;Then our goal of an autonomous car guided by GPS comes closer... &lt;/p&gt;
</description>
      <pubDate>Wed, 18 Feb 2015 00:00:00 +0100</pubDate>
      <link>/documentation/2015/02/18/on-the-road.html</link>
      <guid isPermaLink="true">/documentation/2015/02/18/on-the-road.html</guid>
    </item>
    
    <item>
      <title>Adding a WIFI-module to the car -- with an own Access-Point!</title>
      <description>&lt;p&gt;So, &amp;#39;till now we always had to connect the Raspberry Pi with a screen and keyboard to do some settings and scripting on it. This was especially annoying since the Raspi is located on our RC-car and we always had to put the hole car onto the table.
Therefore we finally managed to connect a WIFI-module with the Raspberry Pi and remote control it via SSH. As additional benefit we now are able to directly remote control the RC via SSH on the Raspi! Isn&amp;#39;t that fun?!&lt;/p&gt;

&lt;p&gt;Truely, it was a hard way to finally reach here. Just to tell you, why this was especially dificult:
First, we thought, we simply could plug some WLAN-module into the Raspi and connect to some network in order to be able to use SSH on another Laptop to control the Raspi remotely. Unfortunately our University is covered (only) by the Eduroam-Network, a www-accessible WIFI-Network. So this was the only candidate to connect with. So we did this only to find out, that there is no chance to connect to it via SSH from another computer: Port 22 is only opened for outgoing connections!&lt;/p&gt;
</description>
      <pubDate>Wed, 18 Feb 2015 00:00:00 +0100</pubDate>
      <link>/documentation/2015/02/18/Adding-a-WIFI-module-to-the-car-with-an-own-Access-Point.html</link>
      <guid isPermaLink="true">/documentation/2015/02/18/Adding-a-WIFI-module-to-the-car-with-an-own-Access-Point.html</guid>
    </item>
    
    <item>
      <title>To the next level!</title>
      <description>&lt;p&gt;Up to now we have not made any changes on the RC cars appearance, which is about to change. Of course it looks good as it is, but we need to introduce modifications, because we need more space! For the RasPi, the GPS module, sensors... we even plan on putting a small speaker on there.&lt;/p&gt;

&lt;p&gt;But that is not all. We think part of the project is also artistic and we have in vision the &lt;/p&gt;

&lt;h1 id=&quot;transparent-car!&quot;&gt;transparent car!&lt;/h1&gt;

&lt;p&gt;Besides making the chassis more lucent and permitting a view on the insides of it, we just designed the mounting plate for all the necessary components out of plexiglas.&lt;/p&gt;

&lt;p&gt;Have a look on it:
&lt;div style=&quot;text-align:center&quot;&gt; &lt;img src =&quot;/images/documentation/plexiglas.png&quot; width=&quot;50%&quot;&gt; &lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&quot;working-together&quot;&gt;Working together&lt;/h2&gt;

&lt;p&gt;We also found out that it is quiet fun to work together as a team. Maybe one can get an impression of our working atmosphere from the following picture.
&lt;div style=&quot;text-align:center&quot;&gt; &lt;img src =&quot;/images/documentation/workingtogether.png&quot; width=&quot;70%&quot;&gt; &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Last week Gero joint us and took the car out on the hallway for a test ride.
&lt;div style=&quot;text-align:center&quot;&gt; &lt;img src =&quot;/images/documentation/hallway.png&quot; alt=&quot;Hallway driving.&quot; width=&quot;45%&quot;&gt; &lt;/div&gt;&lt;/p&gt;
</description>
      <pubDate>Mon, 26 Jan 2015 00:00:00 +0100</pubDate>
      <link>/documentation/2015/01/26/next-level.html</link>
      <guid isPermaLink="true">/documentation/2015/01/26/next-level.html</guid>
    </item>
    
    <item>
      <title>Welcome to our page!</title>
      <description>&lt;p&gt;Just a short welcome to our page&lt;/p&gt;

&lt;h1 id=&quot;current-status-of-the-project:&quot;&gt;Current status of the project:&lt;/h1&gt;

&lt;h2 id=&quot;hardware&quot;&gt;Hardware&lt;/h2&gt;

&lt;p&gt;Our Reely Blaze RC car finally arrived and we started assembling it.
&lt;div style=&quot;text-align:center&quot;&gt; &lt;img src =&quot;/images/documentation/assembly.jpg&quot; alt=&quot;Our model car assembly.&quot; width=&quot;80%&quot;&gt; &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Current status: We finished the assembly and are now able to drive! This was great fun :-)&lt;/p&gt;

&lt;h2 id=&quot;software&quot;&gt;Software&lt;/h2&gt;

&lt;p&gt;We tried using the Raspberry&amp;#39;s PWM to controll the steering Servo and the cruise controll.&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt; &lt;img src =&quot;/images/documentation/pi.jpg&quot; alt=&quot;Our raspberry.&quot; width=&quot;50%&quot;&gt; &lt;/div&gt;

&lt;p&gt;And by now we are ready for attaching the Raspberry to the car and start driving!&lt;/p&gt;

&lt;h4 id=&quot;so&quot;&gt;So&lt;/h4&gt;

&lt;h3 id=&quot;let&amp;#39;s&quot;&gt;let&amp;#39;s&lt;/h3&gt;

&lt;h2 id=&quot;have&quot;&gt;have&lt;/h2&gt;

&lt;h1 id=&quot;fun&quot;&gt;fun&lt;/h1&gt;
</description>
      <pubDate>Wed, 21 Jan 2015 00:00:00 +0100</pubDate>
      <link>/documentation/2015/01/21/Welcome.html</link>
      <guid isPermaLink="true">/documentation/2015/01/21/Welcome.html</guid>
    </item>
    
    <item>
      <title>Default documentation entry</title>
      <description>&lt;p&gt;Note that title and description are shown in the overview, while only the title is displayed on the main page.&lt;/p&gt;

&lt;p&gt;File format is .md or .markdown explicitly.&lt;/p&gt;

&lt;h2 id=&quot;the-filename-is-quiet-important:&quot;&gt;The filename is quiet important:&lt;/h2&gt;

&lt;h1 id=&quot;first-the-date-using-minuses&quot;&gt;First the date using minuses&lt;/h1&gt;

&lt;p&gt;in the order yyyy-mm-dd&lt;/p&gt;

&lt;h2 id=&quot;second-the-rest&quot;&gt;Second the rest&lt;/h2&gt;

&lt;p&gt;again using minuses or not using separtors at all.&lt;/p&gt;

&lt;p&gt;And by now you should have figured&lt;/p&gt;

&lt;h3 id=&quot;how&quot;&gt;How&lt;/h3&gt;

&lt;h2 id=&quot;headings&quot;&gt;Headings&lt;/h2&gt;

&lt;h1 id=&quot;work&quot;&gt;Work&lt;/h1&gt;
</description>
      <pubDate>Tue, 20 Jan 2015 00:00:00 +0100</pubDate>
      <link>/documentation/2015/01/20/how-to-make-an-entry.html</link>
      <guid isPermaLink="true">/documentation/2015/01/20/how-to-make-an-entry.html</guid>
    </item>
    
  </channel>
</rss>

  <div class="separator"></div>

  <div  style="border-bottom: 1px solid #ddd"></div>
  <footer>
    <p>
      Made with <a href="http://jekyllrb.com/">Jekyll</a>,
      hosted on <a href="https://github.com/GPS-Robotic/Motorization/tree/gh-pages">Github Pages</a>. Theme inspired by <a href="http://sebastien.saunier.me/">sebastien.saunier.me</a>.
    </p>
  </footer>

  <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-40867989-1']);
    _gaq.push(['_trackPageview']);

    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();

    /*!
     * http://github.com/ssaunier/track-outbound-links
     * Copyright 2013 Sébastien Saunier
     * @license MIT
     */
    !function(e,t){function n(){for(var n=t.getElementsByTagName("a"),a=[],r=0;r<n.length;++r){var o=n[r];o.host!=e.location.host&&a.push(o)}return a}function a(n){for(var a=n.srcElement||n.target;a&&("undefined"==typeof a.tagName||"a"!=a.tagName.toLowerCase()||!a.href);)a=a.parentNode;a&&a.href&&(e._gaq&&_gaq.push(["_trackEvent","Outbound link","Click",a.href]),(!a.target||a.target.match(/^_(self|parent|top)$/i))&&(setTimeout(function(){t.location.href=a.href},150),n.preventDefault?n.preventDefault():n.returnValue=!1))}e.addEventListener("load",function(){var e=n();for(var t in e)e[t].addEventListener("click",a)})}(window,document);
    var links = document.links;
    for (var i = 0, linksLength = links.length; i < linksLength; i++) {
       if (links[i].hostname != window.location.hostname) { links[i].target = '_blank'; }
    }

    /*
     * Detect if we are included in an iframe => move.
     */
    if (window.top !== window.self
        && !window.self.location.href.match(/headsha\.re/))
    {
      window.top.location.replace(window.self.location.href);
    }
  </script>

  <!--
  <script id="_webengage_script_tag" type="text/javascript">
    // var _weq = _weq || {};
    // _weq['webengage.licenseCode'] = '11b563c38';
    // _weq['webengage.widgetVersion'] = "4.0";

    // (function(d){
    //   var _we = d.createElement('script');
    //   _we.type = 'text/javascript';
    //   _we.async = true;
    //   _we.src = (d.location.protocol == 'https:' ? "https://ssl.widgets.webengage.com" : "http://cdn.widgets.webengage.com") + "/js/widget/webengage-min-v-4.0.js";
    //   var _sNode = d.getElementById('_webengage_script_tag');
    //   _sNode.parentNode.insertBefore(_we, _sNode);
    // })(document);
  </script>
  -->

</body>
</html>
